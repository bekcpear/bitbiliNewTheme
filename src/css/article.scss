// Author: cwittlut <i@bitbili.net>
// License: GPLv2
//

article #content {
  h2 {
    font-size: 2.2em;
    border-bottom: 1px solid var(--bg-less);
  }
  h3 {
    font-size: 1.6em;
  }
  h4 {
    font-size: 1.2em;
  }
  h5 {
    font-size: 1em;
  }
  h6 {
    font-size: 0.8em;
  }
  p, a, li, h2, h3, h4, h5, h6, dd {
    line-height: 1.5em;
    color: var(--fg);
    break-inside: avoid-page;
    transition-property: border-bottom-color,color;
    transition-duration: 0.3s;
  }
  li {
    break-inside: auto;
  }

  /*
  div.section>ul, >ul {
    list-style-type: square;
    >li>ul {
      list-style-type: disc;
      >li>ul {
        list-style-type: circle;
      }
    }
  }
  */
  li p {
    text-indent: initial;
  }

  :not(pre), :not(code), :not(var), :not(samp), :not(q) {
    word-break: break-word;
  }

  a {
    &.reference {
      color: var(--link);
      &:hover {
      }
      &.external {
        &:after {
          content: ' ';
          @include icon(var(--external-icon), 0.6em);
          line-height: 0.6em;
          width: 1em;
          filter: var(--link-f);
          vertical-align: super;
        }
      }
      &.internal {
        color: var(--fg);
        text-decoration: underline;
      }
    }
    &.footnote-reference {
      font-size: 80%;
      vertical-align: super;
    }
    &.github, &.gitlab {
      &:before {
        content: '';
        @include icon(var(--github-icon), 0.8em);
        filter: var(--fg-less-f);
        vertical-align: baseline;
        margin: 0 3px;
      }
      .reponame {
        font: {
          size: 0.9em;
          family: $monofont;
        }
        color: var(--fg);
        transition: color 0.3s;
      }
      .cob {
        &:before {
          content: '@';
        }
        font: {
          size: 0.8em;
          weight: bold;
        }
        border-radius: $radius-smaller;
        background-color: var(--bg-less1);
        color: var(--fg);
        transition-property: background-color,color;
        transition-duration: 0.3s;
        padding: 0.1em 0.6em;
      }
      .path {
        &:before {
          content: ':';
        }
        font: {
          size: 0.9em;
          family: $monofont;
          style: italic;
        }
      }
    }
    &.gitlab {
      &:before {
        background-image: var(--gitlab-icon);
      }
    }
    &.gentoo-package {
      color: var(--ifg);
      transition: color 0.3s;
      font-family: $monofont;
      font-size: 0.8em;
      display: inline-block;
      .category, .slash, .name {
        background-color: var(--genpkg-bg);
        transition: background-color 0.3s;
        padding-top: 0.1em;
        padding-bottom: 0.1em;
      }
      .category {
        padding-left: 0.6em;
        border-top-left-radius: $radius-smaller;
        border-bottom-left-radius: $radius-smaller;
      }
      .name {
        padding-right: 0.6em;
        border-top-right-radius: $radius-smaller;
        border-bottom-right-radius: $radius-smaller;
      }
      &.external:after {
        background-image: var(--genpkg-icon);
        filter: var(--genpkg-bg-f);
        opacity: 0.6;
        transition: opacity 0.3s;
      }
      &:hover {
        text-decoration: none;
      }
      &.external:hover:after {
        opacity: 1;
      }
    }
  }

  /*
   * replaced by scroll-padding-top of html elem
  [id] {
    scroll-margin-top: 60px;
  }
  */
  // link target decoration
  //@media all and (min-width: 1101px) {
  @media screen {
    @mixin targetedDecoration() {
      content: '';
      @include icon(var(--target-title-icon), 12px);
      margin: calc(0.75em - 6px) 0;
      filter: var(--brand0-f);
      position: absolute;
      top: 0;
      left: -16px; // according to padding-left of 'main'
    }
    .section[id] {
      &:target {
        >h2, >h3, >h4, >h5, >h6 {
          a {
            position: relative;
            &:after {
              @include targetedDecoration();
            }
          }
        }
      }
      span[id]:target {
        ~h2, ~h3, ~h4, ~h5, ~h6 {
          a {
            position: relative;
            &:after {
              @include targetedDecoration();
            }
          }
        }
      }
    }
    a.footnote-reference:target {
      color: var(--highlight-fg);
      background-color: var(--highlight);
      transition-property: background-color,color;
      transition-duration: 0.3s;
    }
    // 'overflow: auto' makes pre elem cannot show out-boundary elements
    // and it also invalid the scroll-margin-top prop on chrome, but valid on firefox
    //pre[id]:target, >p[id]:target, .section[id]>p[id]:target {
    >p[id]:target, .section[id]>p[id]:target {
      position: relative;
      &:after {
        @include targetedDecoration();
        top: 1em; // according to the padding-top of pre
      }
    }
    >p[id]:target, .section[id]>p[id]:target {
      position: relative;
      &:after {
        top: 0;
      }
    }
    table[id]:target {
      position: relative;
      >:nth-child(2) {
        &:after {
          @include targetedDecoration();
        }
      }
    }
    [id]:not(pre):not(.section):not(table):target {
      position: relative;
      >:first-child {
        &:after {
          @include targetedDecoration();
          //// 60px(header height)
          //// + 1em(the first elem padding/margin-top
          ////       the default css value of margin-top of p,ol,ul,pre is 1em)
          //top: calc(60px + 1em);
        }
      }
    }
  }

  div.admonition {
    padding: 5px 1em 5px 4em;
    margin-bottom: 10px;

        /*
        // ~~do not set a padding-top, it conflicts with :target anchor fix~~
        // use 'scroll-margin-top' fixes this limit
        */

    // Do not set a margin-left for this element,
    // the :after pseudo elem of this first child for :target decoration
    // set an absolute position to this to work.

    position: relative;
    font-size: 90%;
    line-height: 1.5em;
    break-inside: avoid;
    &:after {
      content: ' ';
      display: block;
      position: absolute;
      z-index: -2;
      left: 2em;
      top: 0;
      height: 100%;
      width: calc(100% - 2em);
      box-sizing: border-box;
      //border-left: 0.3em solid var(--note);
      background-color: var(--note-bg);
      transition: background-color 0.3s;
    }
    >.first {

      // Do not set a position prop for this element,
      // the :after pseudo elem for :target decoration
      // need an absolute position of the parent.

      font: {
        size: 80%;
        family: $monofont;
        weight: bold;
      }
      color: var(--fg-less);
      transition: color 0.3s;
      line-height: 1.5em;

        /*
        margin-top: 0;
        // set a padding-top to make up the lack of padding-top of it's parent
        padding-top: 1em;
        // use 'scroll-margin-top' fixes this limit
        */

      /*
      padding-top: calc(1em / 0.9); // according to :target decoration fix
                                    // here 1em == this '.admonition>.first' font size
                                    // while we need '.admonition' font size
                                    //   due to above content 'top: calc(60px + 1em)'
                                    // so '/ 0.9'
      */

      &:before {
        content: ' ';
        z-index: -1;
        @include icon(var(--note-icon), 1em);
        filter: var(--note-f);
        margin-right: 1em;
      }
    }
    >:not(.first) {
      position: relative;
    }
    &:target {
      /*
        fix :before hight when a :target anchor fix exists
      .first:before {
        height: calc(100% - 60px);
        top: 60px;
      }
      */
      /*
      &:after {
        top: 60px;
        height: calc(100% - 60px);
      }
      scroll-margin-top fixes this workaround
      */
      >:first-child:after {
        /*
          according to .first size line-height
          0.675em: 1.5em * 90%
          6px: half of decoration size
        */
        //margin-top: calc(0.675em - 6px) !important;
        //margin-bottom: calc(0.675em - 6px) !important;

        // fix top prop due to this p has a padding-top:1em
        //top: calc(60px + 1em) !important;
        // fixed by scroll-margin-top

        // margin-top of .first + padding-top of admonition
        top: calc(1em + 5px) !important;
      }
    }
  }
  div.admonition.hint, div.admonition.tip {
    &:after {
      //border-left: 0.3em solid var(--note);
      border-left: 0.3em solid var(--hint);
      background-color: var(--hint-bg);
    }
    .first {
      &:before {
        background-image: var(--hint-icon);
        filter: var(--hint-f);
      }
    }
  }
  div.admonition.warning, div.admonition.attention {
    &:after {
      border-left: 0.3em solid var(--attention);
      background-color: var(--attention-bg);
    }
    .first {
      &:before {
        background-image: var(--attention-icon);
        filter: var(--attention-f);
      }
    }
  }
  div.admonition.warning .first:before {
    background-image: var(--warning-icon);
  }
  div.admonition.important {
    &:after {
      border-left: 0.3em solid var(--important);
      background-color: var(--important-bg);
    }
    .first {
      &:before {
        background-image: var(--important-icon);
        filter: var(--important-f);
      }
    }
  }

  blockquote {
    position: relative;
    font-size: 80%;
    line-height: 1.5em;
    &:before {
      content: ' ';
      @include icon(var(--blockquote-icon), 2em, 0.2);
      filter: var(--fg-less-f);
      position: absolute;
      z-index: -1;
      top: 5px;
      left: 1.5em;
    }
    padding: 1em 1em 1em 4em;
    background-color: var(--bg-less-t);
    transition: background-color 0.3s;
    p {
      text-indent: unset;
    }
  }

  pre, code, var, samp, q, kbd {
    position: relative;
    font: {
      family: $monofont;
      size: 0.9em;
    }
    max-width: 100%;
    overflow: auto;
    transition-property: background-color;
    transition-duration: 0.3s;
  }
  pre {
    line-height: 1.5em;
    background-color: var(--bg-less-t);
    padding: 1em 2em;
    break-inside: avoid;
  }

  code, var, samp, q, kbd {
    padding: 0.1em 0.6em;
    border-radius: $radius-smaller;
    background-color: var(--bg-less);
    &.file {
      background-color: transparent;
    }
  }

  kbd {
    color: var(--ifg);
    font-weight: bold;
    background-color: var(--kbd-bg);
    box-shadow: 1px 1px 2px var(--bg-more);
  }

  table {
    position: relative;
    width: 100%;
    overflow: auto;
    border: none;
    border-spacing: 0;
    border-top: 1px solid var(--fg-less1);
    border-right: 1px solid var(--fg-less1);
    transition-property: border-top-color,border-right-color;
    transition-duration: 0.3s;
    break-inside: avoid;
    th, td {
      border-spacing: 0;
      border-top: none;
      border-right: none;
      border-left: 1px solid var(--fg-less1);
      border-bottom: 1px solid var(--fg-less1);
      transition-property: border-left-color,border-bottom-color;
      transition-duration: 0.3s;
    }
    th {
      border-bottom-width: 2px;
    }
    tr:nth-child(even) {
      background-color: var(--bg-less-t);
      transition: background-color 0.3s;
    }
    tbody tr:hover {
      //color: var(--ifg);
      background-color: var(--brand0-t);
    }
    &.footnote {
      border-right: none;
      font-size: 80%;
      line-height: 1.5em;
      a.fn-backref {
        text-decoration: underline;
      }
      td.label {
        padding: 0 1em;
        line-height: 1.5em;
        border-left: none;
        border-bottom: none;
        word-break: keep-all;
        a.fn-backref {
          word-break: keep-all;
        }
        + td {
          padding: 0 1em;
          border-bottom: none;
          em:first-child {
            margin-right: 1em;
          }
        }
      }
      tbody {
        display: flex;
        tr {
          background: none;
        }
      }
    }
  }

  a {
    &.fn-backref {
    }
    &.internal:hover {
    }
  }

  img {
    display: block;
    position: relative;
    max-width: 100%;
    break-inside: avoid;
  }

  dl {
    dt {
      padding-left: 1em;
      font-size: 90%;
      font-style: italic;
    }
  }
}
